{"version":3,"sources":["components/Header/Header.js","pages/home.js","pages/saved.js","components/App/App.js","registerServiceWorker.js","index.js"],"names":["Header","react_default","a","createElement","class","href","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","Home","_useState","useState","_useState2","Object","slicedToArray","books","setBooks","_useState3","_useState4","search","setSearch","useEffect","axios","get","concat","then","res","data","items","render","map","item","book","volumeInfo","title","className","components_Header_Header","onChange","event","target","value","Saved","App","react_router_dom","react_router","exact","path","component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","catch","error","ReactDOM","components_App_App","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.06f28012.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\n\r\nconst Header = () =>{\r\n\r\n    return(\r\n<nav class=\"navbar navbar-expand-lg navbar-light bg-primary\">\r\n  <a class=\"navbar-brand\" href=\"#\">Google Books</a>\r\n  <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNavAltMarkup\" aria-controls=\"navbarNavAltMarkup\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n    <span class=\"navbar-toggler-icon\"></span>\r\n  </button>\r\n  <div class=\"collapse navbar-collapse\" id=\"navbarNavAltMarkup\">\r\n    <div class=\"navbar-nav\"> \r\n      <a class=\"nav-item nav-link\" href=\"/\">Search</a>\r\n      <a class=\"nav-item nav-link\" href=\"/saved\">Saved</a>\r\n    </div>\r\n  </div>\r\n</nav>\r\n    )\r\n}\r\n\r\nexport default Header","import React, { Component, useEffect, useState } from \"react\";\r\nimport Header from \"../components/Header/Header\";\r\nimport axios from \"axios\";\r\n\r\nfunction Home() {\r\n  const [books, setBooks] = useState(\"harrypotter\");\r\n  const [search, setSearch] = useState([]);\r\n\r\n  const book = () => {\r\n    axios\r\n      .get(\r\n        `https://www.googleapis.com/books/v1/volumes?q=${books}&key=AIzaSyDtuibBTCsR9IJZ9soabbOuzx5EC1zKHFc`\r\n      )\r\n      .then((res) => {\r\n        // console.log(res.data.items[0].volumeInfo.title);\r\n        setSearch([res.data.items]);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    book();\r\n  }, [books]);\r\n\r\n  const render = search.map((item) => {\r\n    return (\r\n      <div>\r\n        {item.map((book) => {\r\n          return <li>{book.volumeInfo.title}</li>;\r\n        })}\r\n      </div>\r\n    );\r\n    // console.log(item);\r\n    // return <li>{item.volumeInfo.title}</li>;\r\n  });\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Header />\r\n\r\n      <div class=\"jumbotron jumbotron-fluid\">\r\n        <div class=\"container\">\r\n          <h1 class=\"display-4\">Google Book Search</h1>\r\n          <p class=\"lead\">Search for and Save Books of Interest!</p>\r\n        </div>\r\n      </div>\r\n      <div class=\"jumbotron jumbotron-fluid\">\r\n        <div class=\"container\">\r\n          <h1 class=\"display-5\">Book Search</h1>\r\n          <p class=\"lead\">Book</p>\r\n          <input\r\n            onChange={(event) => {\r\n              setBooks(event.target.value);\r\n            }}\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"jumbotron jumbotron-fluid\">\r\n        <div class=\"container\">\r\n          <ul>{render}</ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n\r\n// AIzaSyDtuibBTCsR9IJZ9soabbOuzx5EC1zKHFc\r\n","import React, { Component } from \"react\";\r\nimport Header from \"../components/Header/Header\";\r\n\r\nfunction Saved() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Header />\r\n\r\n      <div class=\"jumbotron jumbotron-fluid\">\r\n        <div class=\"container\">\r\n          <h1 class=\"display-4\">Google Book Search</h1>\r\n          <p class=\"lead\">Search for and Save Books of Interest!</p>\r\n        </div>\r\n      </div>\r\n      <div class=\"jumbotron jumbotron-fluid\">\r\n        <div class=\"container\">\r\n          <h1 class=\"display-5\">Saved Books</h1>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Saved;\r\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Home from \"../../pages/home\";\nimport Saved from \"../../pages/saved\";\nimport { BrowserRouter, Route } from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <div>\n        <Route exact path=\"/\" component={Home} />\n        <Route exact path=\"/saved\" component={Saved} />\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log(\"New content is available; please refresh.\");\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App/App\";\nimport registerServiceWorker from \"./registerServiceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nregisterServiceWorker();\n"],"sourceRoot":""}